# Generated by Django 5.2.6 on 2025-09-16 02:32

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Event",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField()),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("concert", "Concert"),
                            ("festival", "Festival"),
                            ("rave", "Rave/Club"),
                            ("theater", "Theater"),
                            ("sports", "Sports"),
                            ("comedy", "Comedy"),
                            ("other", "Other"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("upcoming", "Upcoming"),
                            ("live", "Live/Happening"),
                            ("completed", "Completed"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="upcoming",
                        max_length=20,
                    ),
                ),
                ("venue_name", models.CharField(max_length=200)),
                ("venue_address", models.TextField()),
                ("city", models.CharField(max_length=100)),
                ("state", models.CharField(max_length=50)),
                ("country", models.CharField(default="US", max_length=50)),
                ("event_date", models.DateTimeField()),
                ("doors_open", models.DateTimeField(blank=True, null=True)),
                ("event_end", models.DateTimeField(blank=True, null=True)),
                ("image_url", models.URLField(blank=True)),
                ("artist_lineup", models.JSONField(blank=True, default=list)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_events",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "events",
                "ordering": ["event_date"],
            },
        ),
        migrations.CreateModel(
            name="Ticket",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("section", models.CharField(blank=True, max_length=100)),
                ("row", models.CharField(blank=True, max_length=20)),
                ("seat_number", models.CharField(blank=True, max_length=20)),
                (
                    "quantity",
                    models.PositiveIntegerField(
                        default=1,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(10),
                        ],
                    ),
                ),
                (
                    "original_price",
                    models.DecimalField(decimal_places=2, max_digits=10),
                ),
                ("listing_price", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "condition",
                    models.CharField(
                        choices=[
                            ("digital", "Digital/Mobile"),
                            ("physical", "Physical Ticket"),
                            ("pdf", "PDF Ticket"),
                        ],
                        default="digital",
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("available", "Available"),
                            ("pending", "Pending Sale"),
                            ("sold", "Sold"),
                            ("transferred", "Transferred"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="available",
                        max_length=20,
                    ),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True, help_text="Additional notes about the tickets"
                    ),
                ),
                (
                    "transfer_method",
                    models.CharField(
                        blank=True,
                        help_text="How tickets will be transferred",
                        max_length=200,
                    ),
                ),
                ("listed_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("expires_at", models.DateTimeField(blank=True, null=True)),
                (
                    "event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tickets",
                        to="products.event",
                    ),
                ),
                (
                    "seller",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tickets_selling",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "tickets",
                "ordering": ["listing_price"],
            },
        ),
        migrations.CreateModel(
            name="TicketListing",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("paused", "Paused"),
                            ("sold", "Sold"),
                            ("expired", "Expired"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="active",
                        max_length=20,
                    ),
                ),
                ("views", models.PositiveIntegerField(default=0)),
                ("saves", models.PositiveIntegerField(default=0)),
                (
                    "platform_fee_percentage",
                    models.DecimalField(decimal_places=2, default=5.0, max_digits=5),
                ),
                (
                    "payment_processing_fee",
                    models.DecimalField(decimal_places=2, default=2.9, max_digits=5),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "ticket",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="listing",
                        to="products.ticket",
                    ),
                ),
            ],
            options={
                "db_table": "ticket_listings",
            },
        ),
        migrations.AddIndex(
            model_name="event",
            index=models.Index(fields=["category"], name="events_categor_a7129c_idx"),
        ),
        migrations.AddIndex(
            model_name="event",
            index=models.Index(fields=["status"], name="events_status_8890b6_idx"),
        ),
        migrations.AddIndex(
            model_name="event",
            index=models.Index(fields=["city"], name="events_city_aa4e1f_idx"),
        ),
        migrations.AddIndex(
            model_name="event",
            index=models.Index(fields=["event_date"], name="events_event_d_ec8074_idx"),
        ),
        migrations.AddIndex(
            model_name="ticket",
            index=models.Index(fields=["status"], name="tickets_status_fbbf05_idx"),
        ),
        migrations.AddIndex(
            model_name="ticket",
            index=models.Index(
                fields=["event", "status"], name="tickets_event_i_30e5cd_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="ticket",
            index=models.Index(fields=["seller"], name="tickets_seller__302c26_idx"),
        ),
        migrations.AddIndex(
            model_name="ticket",
            index=models.Index(
                fields=["listing_price"], name="tickets_listing_2b8ef9_idx"
            ),
        ),
    ]
